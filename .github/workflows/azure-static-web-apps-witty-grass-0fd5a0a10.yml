name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '22' # Ensure this matches your project's Node.js version
          cache: 'npm' # Enable caching for faster builds

      # 3. Cache Frontend Dependencies
      - name: Cache Frontend node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      # 4. Install Frontend Dependencies
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      # 5. Build Frontend
      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      # 6. Setup Node.js for Backend (if necessary)
      - name: Setup Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: '22' # Ensure this matches your project's Node.js version
          cache: 'npm'

      # 7. Cache Backend Dependencies (Optional)
      - name: Cache Backend node_modules
        uses: actions/cache@v3
        with:
          path: excel-addin-backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('excel-addin-backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      # 8. Install Backend Dependencies
      - name: Install Backend Dependencies
        run: |
          cd excel-addin-backend
          npm install

      # 9. Build Backend (if necessary)
      - name: Build Backend
        run: |
          cd excel-addin-backend
          # Add any build commands if needed, e.g., npm run build

      # 10. Build And Deploy
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_GRASS_0FD5A0A10 }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          app_location: "/frontend" # App source code path
          api_location: "/excel-addin-backend" # Api source code path - optional
          output_location: "/dist" # Built app content directory
          ###### End of Repository/Build Configurations ######
  
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
